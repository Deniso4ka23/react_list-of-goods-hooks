{"version":3,"sources":["Good.tsx","App.tsx","index.tsx"],"names":["Good","goods","map","good","goodsFromServer","App","useState","isReversed","setReversed","sortType","setSortType","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","classNames","ReactDOM","render","document","getElementById"],"mappings":"uPAMaA,EAAwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SCHJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BK,IAAMC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAaMC,EA1CR,SACEV,EACAQ,EACAF,GAEA,IAAMI,EAAY,YAAOV,GAmBzB,OAjBAU,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,IAAK,WACH,OAAOI,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITT,GACFI,EAAaM,UAGRN,EAkBcO,CACnBd,EACAK,EACAF,GAGF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAfqB,kBAAMX,EAAY,aAgBvCS,UAAWG,IACT,iBACA,CAAE,WAAyB,aAAbb,IALlB,iCAWA,wBACEW,KAAK,SACLC,QAxBa,kBAAMX,EAAY,WAyB/BS,UAAWG,IACT,oBACA,CAAE,WAAyB,WAAbb,IALlB,4BAWA,wBACEW,KAAK,SACLC,QAvCQ,kBAAMb,GAAaD,IAwC3BY,UAAWG,IACT,oBACA,CAAE,YAAaf,IALnB,sBAWe,SAAbE,GAAuBF,IACvB,wBACEa,KAAK,SACLC,QAxDI,WACZb,GAAY,GACZE,EAAY,SAuDJS,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAMlB,MAAOU,QChHnBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.973d4d60.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const Good: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { Good } from './Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 'alphabet':\n        return a.localeCompare(b);\n\n      case 'length':\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState('none');\n\n  const reset = () => {\n    setReversed(false);\n    setSortType('none');\n  };\n\n  const reverse = () => setReversed(!isReversed);\n\n  const sortByAlphabetically = () => setSortType('alphabet');\n\n  const sortByLength = () => setSortType('length');\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlphabetically}\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== 'alphabet' },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== 'length' },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverse}\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none' || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Good goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}